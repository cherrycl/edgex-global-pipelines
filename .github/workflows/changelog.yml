name: Generate Changelog

on:
  workflow_dispatch:
  push:
    branches:
      - changelog

jobs:
  generate-changelog:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: 
          - edgexfoundry/edgex-go
          - edgexfoundry/device-virtual-go

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ matrix.repository }}
          fetch-depth: 0  # Ensures all tags and history are fetched

      - name: Download centralized cliff.toml
        run: |
          curl -sSL -o cliff.toml https://raw.githubusercontent.com/cherrycl/edgex-global-pipelines/refs/heads/${{ github.ref_name }}/.github/configs/cliff.toml

      - name: Get CommitId by Latest Stable Tag
        run: |
          git fetch --tags
          latest_stable=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "1: $latest_stable"
          latest_tag=$(git describe --tags --abbrev=0)
          echo "2: ${latest_tag}"

          next_stable=$(echo "$latest_tag" | sed -E 's/-dev.[0-9]+$//')
          echo "3: ${next_stable}"
          next_version=$(echo "$next_stable" | sed -E 's/v//')
          
          echo "Generating changelog from $previous_tag to $latest_tag"
          commitId=$(git rev-list -n 1 $latest_stable)
          echo "commitId=$commitId" >> $GITHUB_ENV
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Generate Changelogs
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -- ${{ env.commitId }}..HEAD
        env:
          OUTPUT: changelog-${{ env.NEXT_VERSION }}.md

      - name: Extract repository name
        run: echo "REPO_NAME=$(echo ${{ matrix.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Upload changelog artifact
        uses: actions/upload-artifact@v4
        with:
          name: changelog-${{ env.REPO_NAME }}
          path: changelog-${{ env.NEXT_VERSION }}.md
